{"version":3,"sources":["components/general/Sign-up-general.tsx","components/company/Sign-up-company.tsx","components/user/Sign-up-user.tsx","components/general/Login.tsx","actions/index.ts","actions/types.ts","components/general/Home-page-header.tsx","components/general/Home-page-footer.tsx","components/messages/warning-message.tsx","components/general/Home-page-posts.tsx","components/general/Search.tsx","components/user/Favorite-user-list.tsx","components/user/User-page-header.tsx","App.tsx","serviceWorker.ts","reducers/postReducer.ts","reducers/loginReducer.ts","reducers/logoutReducer.ts","reducers/isLogged.ts","reducers/index.ts","store.ts","index.tsx"],"names":["SignUp","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Form","size","Segment","stacked","Header","as","color","marginTop","Button","Group","to","fluid","Or","signUpCompany","Input","icon","iconPosition","placeholder","type","Message","props","onSubmit","e","preventDefault","marginBottom","Icon","name","onChange","Login","dispatch","useDispatch","isLogged","useSelector","state","user","useState","email","setemail","password","setpassword","userInfo","callback","axios","post","passowrd","then","userToken","payload","data","catch","err","console","log","login","history","push","target","value","HomePageHeader","Menu","fixed","inverted","Container","Item","position","primary","header","Image","src","HomePageFooter","vertical","margin","padding","divided","stackable","width","content","WarningMessage","warning","HomePagePosts","posts","counter","localStorage","getItem","setIsLogged","showDesc","setShowDesc","useEffect","get","postItems","items","resetCounter","showDescreptipn","Element","className","logo","Content","title","Meta","checkToken","Description","description","Extra","onClick","columns","Row","map","majorOptions","key","text","typesOptions","Search","majorQuerySearch","setMajorQuerySearch","typeQuerySearch","setTypeQuerySearch","enteredQuerySearch","setenteredQuerySearch","pointing","Dropdown","search","selection","options","textContent","languageOptions","FavoriteUserList","Component","UserPageHeader","userName","trigger","avatar","handleClick","id","MenuItem","App","path","exact","component","SignUpGeneral","SignUpCompany","SignUpUser","Boolean","window","location","hostname","match","initialState","postReducer","action","userId","userEmail","loginReducer","setItem","acsessToken","Name","logouReducer","removeItem","isLoggedReducer","rootReducer","combineReducers","logout","logoutReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92537cb0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../style.css/form.css\";\r\nimport \"./General.css\";\r\nconst SignUp = () => {\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"75vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 550 }}>\r\n          <Form size=\"large\">\r\n            <Segment stacked>\r\n              <Header\r\n                as=\"h2\"\r\n                color=\"teal\"\r\n                textAlign=\"center\"\r\n                style={{ marginTop: \"2rem\" }}\r\n              >\r\n                SIGN UP\r\n              </Header>\r\n\r\n              <Button.Group style={{ marginTop: \"3rem\" }}>\r\n                <Link to=\"/signupuser\">\r\n                  <Button color=\"teal\" fluid size=\"large\">\r\n                    User\r\n                  </Button>\r\n                </Link>\r\n\r\n                <Button.Or />\r\n                <Link to=\"/signupcompany\">\r\n                  <Button color=\"teal\" fluid size=\"large\">\r\n                    Company\r\n                  </Button>\r\n                </Link>\r\n              </Button.Group>\r\n            </Segment>\r\n          </Form>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../style.css/form.css\";\r\n\r\nconst signUpCompany = () => {\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"75vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 550 }}>\r\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n            Create a company account\r\n          </Header>\r\n          <Form size=\"large\">\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Company Name\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"joe@schmoe.com\"\r\n                type=\"mail\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\">\r\n                Sign Up\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            Do you have an account ?<Link to=\"login\">Login</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default signUpCompany;\r\n","import React /*, { useState } */ from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../style.css/form.css\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { signup } from \"../../actions\";\r\n\r\n// ----------------------------------------- This component not ready yet ---------------------------\r\n\r\nconst signUpCompany = (props: any) => {\r\n  // const [userName, setUserName] = useState({ userName: \"\" });\r\n  // const [email, setemail] = useState({ email: \"\" });\r\n  // const [password, setpassword] = useState({ password: \"\" });\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   // dispatch(login());\r\n  // }, []);\r\n\r\n  const onChangeUserName = (e: any) => {\r\n    // setUserName({ userName: e.target.value });\r\n  };\r\n  const onChangeEmail = (e: any) => {\r\n    // setemail({ email: e.target.value });\r\n  };\r\n\r\n  const onChangePass = (e: any) => {\r\n    // setpassword({ password: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    // dispatch(\r\n    //   signup(\r\n    //     { userName: userName, email: email, password: password },\r\n    //     (userInfo: any) => {\r\n    //       console.log(userInfo);\r\n    //     }\r\n    //   )\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"75vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 550 }}>\r\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n            Create an account\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={onSubmit}>\r\n            <Segment stacked>\r\n              <Button color=\"google plus\" style={{ marginBottom: \"2rem\" }}>\r\n                <Icon name=\"google\" /> Sign Up using Google\r\n              </Button>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"User Name\"\r\n                onChange={onChangeUserName}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"joe@schmoe.com\"\r\n                type=\"mail\"\r\n                onChange={onChangeEmail}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                onChange={onChangePass}\r\n              />\r\n\r\n              <Button color=\"teal\" fluid size=\"large\">\r\n                Sign Up\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            Do you have an account ?<Link to=\"login\">Login</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default signUpCompany;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../../style.css/form.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../../actions\";\r\n\r\nconst Login = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  let isLogged: any = useSelector((state: any) => state.user.isLogged);\r\n\r\n  // let userName: any = useSelector((state: any) => state.user.userName);\r\n  const [email, setemail] = useState({ email: \"\" });\r\n  const [password, setpassword] = useState({ password: \"\" });\r\n\r\n  const onChangeEmail = (e: any) => {\r\n    setemail({ email: e.target.value });\r\n  };\r\n\r\n  const onChangePass = (e: any) => {\r\n    setpassword({ password: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      login({ email: email, password: password }, (userInfo: any) => {\r\n        console.log(userInfo);\r\n        props.history.push(\"/\");\r\n      })\r\n    );\r\n  };\r\n\r\n  if (isLogged) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"75vh\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 550 }}>\r\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n            Log-in to your account\r\n          </Header>\r\n          <Form size=\"large\" onSubmit={onSubmit}>\r\n            <Segment stacked>\r\n              <Button color=\"google plus\" style={{ marginBottom: \"2rem\" }}>\r\n                <Icon name=\"google\" /> Login using Google\r\n              </Button>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"User Name\"\r\n                onChange={onChangeEmail}\r\n                name=\"email\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                onChange={onChangePass}\r\n                name=\"password\"\r\n              />\r\n              <Button color=\"teal\" fluid size=\"large\">\r\n                Login\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            New to us?<Link to=\"signup\">Sign Up</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  FETCH_POSTS,\r\n  SIGN_IN,\r\n  LOGOUT_SUCCESS,\r\n  IS_LOGGED\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\n// FETCH THE POSTS\r\nexport const fetchPost = () => (dispatch: any) => {\r\n  axios.get(`http://localhost:3004/articles`).then(posts => {\r\n    console.log(posts);\r\n    dispatch({\r\n      type: FETCH_POSTS,\r\n      payload: posts.data\r\n    });\r\n  });\r\n};\r\n\r\n//LOGIN USER REQUEST\r\nexport const login = (userInfo: any, callback: any) => (dispatch: any) => {\r\n  axios\r\n    .post(\"http://127.0.0.1:3004/user/signIn\", {\r\n      email: userInfo.email.email,\r\n      passowrd: userInfo.password.password\r\n    })\r\n    .then(userToken => {\r\n      dispatch({\r\n        type: SIGN_IN,\r\n        payload: userToken.data\r\n      });\r\n      callback(userToken.data);\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n//SIGNUP USER REQUEST\r\nexport const signup = (/*userInfo: any, callback: any */) => (\r\n  dispatch: any\r\n) => {\r\n  console.log(\"inside sign up action\");\r\n  // console.log(userInfo);\r\n\r\n  axios\r\n    .post(\"http://127.0.0.1:3004/user/signUp\", {\r\n      // userName: userInfo.userName.userName,\r\n      // email: userInfo.email.email,\r\n      // passowrd: userInfo.password.password\r\n      userName: \"Mohammad\",\r\n      email: \"mohammad@mohammad.com\",\r\n      passowrd: \"sleepy\"\r\n    })\r\n    .then(response => {\r\n      // dispatch({\r\n      //   type: SIGN_UP,\r\n      //   payload: userToken.data\r\n      // });\r\n      // callback(userToken.data);\r\n      console.log(response);\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n//LOGOUT USER\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\n// TO CHECK ID THE USER LOGIN OR NOT\r\nexport const isLogged = () => {\r\n  return {\r\n    type: IS_LOGGED\r\n  };\r\n};\r\n","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const IS_LOGGED = \"IS_LOGGED\";\r\n","import React from \"react\";\r\nimport { Container, Image, Menu, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../style.css/form.css\";\r\n\r\n// const LogoImg = () => (\r\n//   <Image\r\n//     src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n//     size=\"medium\"\r\n//     circular\r\n//   />\r\n// );\r\nconst HomePageHeader = () => {\r\n  return (\r\n    <div>\r\n      <Menu fixed=\"top\" inverted style={{ height: \"4.5rem\" }}>\r\n        <Container>\r\n          <Menu.Item position=\"left\">\r\n            <Link to=\"login\">\r\n              <Button primary>\r\n                <h4>Login</h4>\r\n              </Button>\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item as=\"a\" header position=\"right\">\r\n            <Link to=\"/\">\r\n              <Image\r\n                size=\"mini\"\r\n                src=\"https://image.shutterstock.com/image-vector/education-logo-template-260nw-1075581467.jpg\"\r\n              />\r\n            </Link>\r\n          </Menu.Item>\r\n        </Container>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePageHeader;\r\n","import React from \"react\";\r\nimport { Container, Grid, Header, Segment } from \"semantic-ui-react\";\r\nimport \"../../style.css/form.css\";\r\nconst HomePageFooter = () => {\r\n  return (\r\n    <div>\r\n      <Segment\r\n        inverted\r\n        vertical\r\n        style={{ margin: \"5em 0em 0em\", padding: \"5em 0em\" }}\r\n      >\r\n        <Container textAlign=\"center\">\r\n          <Grid divided inverted stackable>\r\n            <Grid.Column width={5}>\r\n              <Header inverted as=\"h4\" content=\"About Us\" />\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Header inverted as=\"h4\" content=\"Contact Us\" />\r\n            </Grid.Column>\r\n            <Grid.Column width={5}>\r\n              <Header inverted as=\"h4\" content=\"CopyRight\" />\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n      </Segment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePageFooter;\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\nconst WarningMessage = () => (\r\n  <Message warning>\r\n    <Message.Header>\r\n      You must Login before you can see more info!\r\n    </Message.Header>\r\n    <p>\r\n      Visit our <em>Login page</em>{\" \"}\r\n    </p>\r\n  </Message>\r\n);\r\n\r\nexport default WarningMessage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Item, Header } from \"semantic-ui-react\";\r\nimport \"./General.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchPost } from \"../../actions\";\r\nimport WarningMessage from \"../messages/warning-message\";\r\n\r\nconst HomePagePosts = () => {\r\n  const posts: any = useSelector((state: any) => state.posts);\r\n  const dispatch = useDispatch();\r\n  let counter = 0;\r\n  const [isLogged, setIsLogged] = useState(localStorage.getItem(\"token\"));\r\n\r\n  const [showDesc, setShowDesc] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // const dispatch = useDispatch();\r\n    dispatch(fetchPost());\r\n    setIsLogged(localStorage.getItem(\"token\"));\r\n  }, []);\r\n\r\n  const postItems = posts.items ? posts.items : \"\";\r\n\r\n  // ----------------------------------------- Start Helper Functions----------------------------------------- //\r\n  const resetCounter = () => {\r\n    counter = 0;\r\n  };\r\n\r\n  const checkToken = (isLogged: any) => {\r\n    return isLogged ? true : false;\r\n  };\r\n\r\n  const showDescreptipn = () => {\r\n    if (!isLogged) {\r\n      console.log(\"log in please\");\r\n      setShowDesc(!showDesc);\r\n    }\r\n  };\r\n\r\n  // ----------------------------------------- End Helper Functions----------------------------------------- //\r\n\r\n  const Element = (post: any) => {\r\n    if (counter < 3) {\r\n      counter++;\r\n      return (\r\n        <Grid.Column>\r\n          <Item.Group className=\"post-home-page\">\r\n            <Item style={{ padding: \"2rem 2rem\" }}>\r\n              <Item.Image size=\"tiny\" src={post.logo} />\r\n\r\n              <Item.Content>\r\n                <Item.Header>{post.title}</Item.Header>\r\n                <Item.Meta>by RBK</Item.Meta>\r\n                {checkToken(isLogged) ? (\r\n                  <Item.Description>\r\n                    <p>{post.description}</p>\r\n                  </Item.Description>\r\n                ) : (\r\n                  <Item.Description></Item.Description>\r\n                )}\r\n\r\n                <Item.Extra as=\"a\" onClick={showDescreptipn}>\r\n                  Additional Information\r\n                  {showDesc ? <WarningMessage /> : null}\r\n                </Item.Extra>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"4rem auto\", width: \"75%\" }}>\r\n      <Header as=\"h1\">Scholarship</Header>\r\n      <Grid columns={3}>\r\n        <Grid.Row>{postItems.map((post: any) => Element(post))}</Grid.Row>\r\n      </Grid>\r\n\r\n      {resetCounter()}\r\n      <Header as=\"h1\">Jobs</Header>\r\n      <Grid columns={3}>\r\n        <Grid.Row>{postItems.map((post: any) => Element(post))}</Grid.Row>\r\n      </Grid>\r\n      {resetCounter()}\r\n\r\n      <Header as=\"h1\">Training</Header>\r\n      <Grid columns={3}>\r\n        <Grid.Row>{postItems.map((post: any) => Element(post))}</Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePagePosts;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Menu, Dropdown, Icon, Grid, Input } from \"semantic-ui-react\";\r\n\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Majors : Media\r\n\r\n// this the Option for Major\r\nconst majorOptions = [\r\n  { key: \"a1\", value: \"m1\", text: \"Achitecture\" },\r\n  { key: \"a2\", value: \"m2\", text: \"Art\" },\r\n  { key: \"a3\", value: \"m3\", text: \"Business\" },\r\n  { key: \"a4\", value: \"m4\", text: \"Media\" },\r\n  { key: \"a5\", value: \"m5\", text: \"Computer\" },\r\n  { key: \"a6\", value: \"m6\", text: \"Science\" },\r\n  { key: \"a7\", value: \"m7\", text: \"Medicine\" },\r\n  { key: \"a8\", value: \"m8\", text: \"Languages\" },\r\n  { key: \"a9\", value: \"m9\", text: \"Law\" },\r\n  { key: \"a10\", value: \"m10\", text: \"Philosophy\" },\r\n  { key: \"a11\", value: \"m11\", text: \"Political\" },\r\n  { key: \"a12\", value: \"m12\", text: \"Tourisim\" },\r\n  { key: \"a13\", value: \"m13\", text: \"Sports\" },\r\n  { key: \"a14\", value: \"m14\", text: \"History\" },\r\n  { key: \"a15\", value: \"m15\", text: \"Engineerong\" },\r\n  { key: \"a16\", value: \"m16\", text: \"IT\" },\r\n  { key: \"a17\", value: \"m17\", text: \"Education\" },\r\n  { key: \"a18\", value: \"m18\", text: \"Literature\" }\r\n];\r\n\r\n// this the Option for Type\r\nconst typesOptions = [\r\n  { key: \"a1\", value: \"t1\", text: \"Jerusalem\" },\r\n  { key: \"a2\", value: \"t2\", text: \"Safed\" },\r\n  { key: \"a3\", value: \"t3\", text: \"Haifa\" },\r\n  { key: \"a4\", value: \"t4\", text: \"Bisan\" },\r\n  { key: \"a5\", value: \"t5\", text: \"Akka\" },\r\n  { key: \"a6\", value: \"t6\", text: \"Nablus\" },\r\n  { key: \"a7\", value: \"t7\", text: \"Tulkarm\" },\r\n  { key: \"a8\", value: \"t8\", text: \"Qalqilya\" },\r\n  { key: \"a9\", value: \"t9\", text: \"Caesarea\" },\r\n  { key: \"a10\", value: \"t10\", text: \"Ramallah\" },\r\n  { key: \"a11\", value: \"t11\", text: \"Al-Bireh\" },\r\n  { key: \"a12\", value: \"t12\", text: \"Al-Roll\" },\r\n  { key: \"a13\", value: \"t13\", text: \"Jaffa\" },\r\n  { key: \"a14\", value: \"t14\", text: \"Jericho\" },\r\n  { key: \"a15\", value: \"t15\", text: \"Bethlehem\" },\r\n  { key: \"a16\", value: \"t16\", text: \"Hebron\" },\r\n  { key: \"a17\", value: \"t17\", text: \"Khan\" },\r\n  { key: \"a18\", value: \"t18\", text: \"Rafah\" },\r\n  { key: \"a19\", value: \"t19\", text: \"Beersheba\" }\r\n];\r\n\r\nconst Search = () => {\r\n  // should rename this state\r\n  let [majorQuerySearch, setMajorQuerySearch] = useState(\"\");\r\n  let [typeQuerySearch, setTypeQuerySearch] = useState(\"\");\r\n  let [enteredQuerySearch, setenteredQuerySearch] = useState(\"\");\r\n\r\n  // to take the value of dropdowns search by Type --------------------\r\n  const hundleDropDownChangeByMajor = (e: any) => {\r\n    setMajorQuerySearch(e.target.textContent);\r\n  };\r\n\r\n  // to take the value of dropdowns search by Type -----------------\r\n  const hundleDropDownChangeByType = (e: any) => {\r\n    setTypeQuerySearch(e.target.textContent);\r\n  };\r\n\r\n  // to take the value from input search field\r\n  const hundleChange = (e: any) => {\r\n    setenteredQuerySearch(e.target.value);\r\n  };\r\n\r\n  // Hundle the search button\r\n  const onSearch = () => {\r\n    console.log(majorQuerySearch, typeQuerySearch, enteredQuerySearch);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"6rem auto 0 auto\", width: \"70%\" }}>\r\n      <div>\r\n        <Menu pointing>\r\n          {/* ------------------------------------ Search Dropdown--------------------------------- */}\r\n\r\n          <Menu.Item>\r\n            <Dropdown\r\n              placeholder=\"choose Type...\"\r\n              fluid\r\n              search\r\n              selection\r\n              options={majorOptions}\r\n              onChange={hundleDropDownChangeByMajor}\r\n            />\r\n          </Menu.Item>\r\n          {/* ------------------------------------ Search Dropdown--------------------------------- */}\r\n\r\n          <Menu.Item>\r\n            <Dropdown\r\n              placeholder=\"choose major...\"\r\n              fluid\r\n              search\r\n              selection\r\n              options={typesOptions}\r\n              onChange={hundleDropDownChangeByType}\r\n            />\r\n          </Menu.Item>\r\n\r\n          {/* ------------------------------------ Search Input--------------------------------- */}\r\n\r\n          <Menu.Item>\r\n            <Input placeholder=\"Search...\" onChange={hundleChange} />\r\n          </Menu.Item>\r\n\r\n          {/* ------------------------------------ Search Button--------------------------------- */}\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item>\r\n              <Button primary onClick={onSearch}>\r\n                <Grid columns={2} divided>\r\n                  <Grid.Column>Search</Grid.Column>\r\n                  <Grid.Column>\r\n                    <Icon inverted name=\"search\" />\r\n                  </Grid.Column>\r\n                </Grid>\r\n              </Button>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu>\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nconst languageOptions = [{}];\r\nexport default class FavoriteUserList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dropdown className=\"icon\" icon=\"heart\" options={languageOptions}>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item text=\"New\" />\r\n            <Dropdown.Item text=\"New\" />\r\n            <Dropdown.Item text=\"New\" />\r\n            <Dropdown.Item text=\"New\" />\r\n            <Dropdown.Item text=\"New\" />\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Dropdown, Image, Menu, MenuItem } from \"semantic-ui-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../../style.css/form.css\";\r\nimport UserFavoriteList from \"./Favorite-user-list\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../actions\";\r\n\r\nconst UserPageHeader = () => {\r\n  // const userName: any = useSelector((state: any) => state.user.userName);\r\n  let userName: any = localStorage.getItem(\"userName\");\r\n  const dispatch = useDispatch();\r\n  const trigger = (\r\n    <span>\r\n      <Image avatar src=\"../../avatar2.png\" /> {userName}\r\n    </span>\r\n  );\r\n\r\n  // const LogoImg = () => (\r\n  //   <Image\r\n  //     src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n  //     size=\"medium\"\r\n  //     circular\r\n  //   />\r\n  // );\r\n\r\n  const handleClick = (e: any) => {\r\n    console.log(e.target.id);\r\n    if (e.target.id === \"sign-out\") {\r\n      dispatch(logout());\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu fixed=\"top\" inverted style={{ height: \"4.5rem\" }}>\r\n        <Container>\r\n          {/* <Menu.Item position=\"left\">\r\n            <Dropdown\r\n              trigger={trigger}\r\n              options={options}\r\n              pointing=\"top left\"\r\n              icon={null}\r\n            />\r\n          </Menu.Item> */}\r\n\r\n          <MenuItem>\r\n            <Dropdown trigger={trigger} pointing=\"top left\" icon={null}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Header />\r\n                <Dropdown.Item id=\"account\" onClick={handleClick}>\r\n                  Account\r\n                </Dropdown.Item>\r\n                <Dropdown.Item id=\"favorite\" onClick={handleClick}>\r\n                  Favorite\r\n                </Dropdown.Item>\r\n                <Dropdown.Item id=\"edit\" onClick={handleClick}>\r\n                  Edit Account\r\n                </Dropdown.Item>\r\n                {/* <Link to=\"/\"> */}\r\n                <Dropdown.Item id=\"sign-out\" onClick={handleClick}>\r\n                  Sign Out\r\n                </Dropdown.Item>\r\n                {/* </Link> */}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </MenuItem>\r\n\r\n          <Menu.Item>\r\n            <UserFavoriteList />\r\n          </Menu.Item>\r\n\r\n          <Menu.Item as=\"a\" header position=\"right\">\r\n            <Link to=\"/\">\r\n              <Image\r\n                size=\"mini\"\r\n                src=\"https://image.shutterstock.com/image-vector/education-logo-template-260nw-1075581467.jpg\"\r\n              />\r\n            </Link>\r\n          </Menu.Item>\r\n        </Container>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPageHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport SignUpGeneral from \"./components/general/Sign-up-general\";\r\nimport SignUpCompany from \"./components/company/Sign-up-company\";\r\nimport SignUpUser from \"./components/user/Sign-up-user\";\r\nimport Login from \"./components/general/Login\";\r\nimport MainPageHeader from \"./components/general/Home-page-header\";\r\nimport MainPageFooter from \"./components/general/Home-page-footer\";\r\nimport MainPagePosts from \"./components/general/Home-page-posts\";\r\nimport Search from \"./components/general/Search\";\r\nimport UserPageHeader from \"./components/user/User-page-header\";\r\n\r\n// import { logout } from \"./actions/index\";\r\n// import { signup } from \"./actions/index\";\r\n\r\nconst App: React.FC = () => {\r\n  const [isLogged, setIsLogged] = useState(localStorage.getItem(\"token\"));\r\n\r\n  // check if there is a user logged or not\r\n  useEffect(() => {\r\n    setIsLogged(localStorage.getItem(\"token\"));\r\n  }, []);\r\n\r\n  if (isLogged)\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <UserPageHeader />\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Search />\r\n              <MainPagePosts />\r\n            </Route>\r\n            <Route path=\"/signup\" exact component={SignUpGeneral} />\r\n            <Route path=\"/signupcompany\" component={SignUpCompany} />\r\n            <Route path=\"/signupuser\" component={SignUpUser} />{\" \"}\r\n            <Route path=\"/login\" component={Login} />\r\n          </Switch>\r\n          <MainPageFooter />\r\n        </div>\r\n      </Router>\r\n    );\r\n  else\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <MainPageHeader />\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Search />\r\n              <MainPagePosts />\r\n            </Route>\r\n            <Route path=\"/signup\" exact component={SignUpGeneral} />\r\n            <Route path=\"/signupcompany\" component={SignUpCompany} />\r\n            <Route path=\"/signupuser\" component={SignUpUser} />{\" \"}\r\n            <Route path=\"/login\" component={Login} />\r\n          </Switch>\r\n          <MainPageFooter />\r\n        </div>\r\n      </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  items: []\r\n};\r\n\r\nconst postReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      // console.log(action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","const initialState = {\r\n  userId: null,\r\n  userName: null,\r\n  userEmail: null,\r\n  userToken: null,\r\n  isLogged: false\r\n};\r\n\r\nconst loginReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"SIGN_IN\":\r\n      console.log(\"inside login reducer\");\r\n      localStorage.setItem(\"token\", action.payload.acsessToken);\r\n      localStorage.setItem(\"userId\", action.payload.user.id);\r\n      localStorage.setItem(\"userName\", action.payload.user.Name);\r\n      localStorage.setItem(\"userEmail\", action.payload.user.email);\r\n\r\n      return {\r\n        ...state,\r\n        userId: action.payload.user.id,\r\n        userName: action.payload.user.Name,\r\n        userEmail: action.payload.user.email,\r\n        userToken: action.payload.acsessToken,\r\n        isLogged: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","const initialState = {\r\n  userToken: localStorage.getItem(\"token\"),\r\n  userId: null,\r\n  userName: null,\r\n  userEmail: null,\r\n  isLogged: true\r\n};\r\n\r\nconst logouReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"LOGOUT_SUCCESS\":\r\n      console.log(\"inside logout sucess switch\");\r\n\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"userId\");\r\n      localStorage.removeItem(\"userEmail\");\r\n      localStorage.removeItem(\"userName\");\r\n\r\n      return {\r\n        ...state,\r\n        userToken: null,\r\n        userId: null,\r\n        userName: null,\r\n        userEmail: null,\r\n        isLogged: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default logouReducer;\r\n","const initialState = {\r\n  userToken: localStorage.getItem(\"token\"),\r\n  isLogged: false\r\n};\r\n\r\nconst isLoggedReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"IS_LOGGED\":\r\n      if (state.userToken)\r\n        return {\r\n          ...state,\r\n          isLogged: false\r\n        };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isLoggedReducer;\r\n","import postReducer from \"./postReducer\";\r\nimport loginReducer from \"./loginReducer\";\r\nimport logoutReducer from \"./logoutReducer\";\r\nimport isLoggedReducer from \"./isLogged\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: loginReducer,\r\n  posts: postReducer,\r\n  logout: logoutReducer,\r\n  isLogged: isLoggedReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer /* preloadedState, */,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}